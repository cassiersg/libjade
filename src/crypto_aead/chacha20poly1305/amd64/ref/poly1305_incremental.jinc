from Jade require "crypto_verify/16/amd64/common/crypto_verify_16.jinc"
from Jade require "crypto_onetimeauth/poly1305/amd64/ref/poly1305.jinc"

inline fn __clamp_stack(stack u64[4] k) -> reg u64[3]
{
  reg u64[3] r;

  r[0] = k[0];
  r[1] = k[1];
  r[0] &= 0x0ffffffc0fffffff;
  r[1] &= 0x0ffffffc0ffffffc;
  r[2] = r[1];
  r[2] >>= 2;
  r[2] += r[1];

  return r;
}

inline fn __poly1305_setup_ref_stack(stack u64[4] k) -> reg u64[3], reg u64[3], stack u64[4]
{
  inline int i;
  reg u64[3] h r;

  for i=0 to 3 { h[i] = 0; }
  r = __clamp_stack(k);

  return h, r, k;
}

inline fn __load_last_add_pad16(reg u64[3] h, reg u64 in len) -> reg u64[3]
{
 reg bool cf;
  reg   u64    j;
  stack u64[2] s;
  reg   u8     c;

  s[0] = 0;
  s[1] = 0;

  j = 0;
  while(j < len)
  { c = (u8)[in + j];
    s[u8 (int)j] = c;
    j += 1;
  }

  cf, h[0] += s[0];
  cf, h[1] += s[1] + cf;
   _, h[2] +=    1 + cf;
 
  return h;
}

inline fn __poly1305_update_noclamp_ref(reg u64 in inlen, reg u64[3] h r) -> reg u64[3]
{
  while(inlen >= 16)
  {
    h = __load_add(h, in);
    h = __mulmod(h, r);
    in += 16;
    inlen -= 16;
  }

  if(inlen > 0)
  { h = __load_last_add_pad16(h, in, inlen);
    h = __mulmod(h, r);
  }


  return h;
}

inline fn __poly1305_last_lengths(reg u64 adlen inlen, stack u64[4] k, reg u64[3] h r) -> reg u64[2]
{
  reg u64[2] m s h2;
  reg bool cf;

  m[0] = adlen;
  m[1] = inlen;

  cf, h[0] += m[0];
  cf, h[1] += m[1] + cf;
   _, h[2] +=    1 + cf;

  h = __mulmod(h, r);

  h2 = __freeze(h);
  s[0] = k[2];
  s[1] = k[3];
  h2 = __add2(h2, s);

  return h2;
}


inline fn __poly1305_ad_r_ref(reg u64 tag ad adlen in inlen, stack u64[4] k) -> reg u64[2]
{
  reg u64[3] h r;
  reg u64[2] h2;
  stack u64 inlen_s adlen_s;

  h, r, k = __poly1305_setup_ref_stack(k);

  adlen_s = adlen;
  inlen_s = inlen;

  h = __poly1305_update_noclamp_ref(ad, adlen, h, r);


  inlen = inlen_s;
  h = __poly1305_update_noclamp_ref(in, inlen, h, r);

  adlen = adlen_s;
  inlen = inlen_s;
  h2 = __poly1305_last_lengths(adlen, inlen, k, h, r);

  return h2;

}

inline fn __poly1305_ad_ref(reg u64 tag ad adlen in inlen, stack u64[4] k)
{
  reg u64[2] h2;
  h2 = __poly1305_ad_r_ref(tag,ad,adlen,in,inlen,k);
  __store2(tag,h2);
}

inline fn __poly1305_ad_verify_ref(reg u64 tag ad adlen in inlen, stack u64[4] k) -> reg u64
{
  reg u64[2] tagn;
  reg u64 r;

  tagn = __poly1305_ad_r_ref(tag,ad,adlen,in,inlen,k);
  r = __crypto_verify_p_u8x16_r_u64x2(tag, tagn);
  return r;
}

